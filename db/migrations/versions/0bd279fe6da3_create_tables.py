"""create tables

Revision ID: 0bd279fe6da3
Revises: 
Create Date: 2020-01-29 13:50:53.152392

"""
from alembic import op
import sqlalchemy as sa
import flask_unchained.bundles.sqlalchemy.sqla.types as sqla_bundle

# revision identifiers, used by Alembic.
revision = '0bd279fe6da3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercise_type',
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_exercise_type'))
    )
    op.create_table('flask_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('data', sa.LargeBinary(), nullable=False),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_flask_sessions')),
    sa.UniqueConstraint('session_id', name=op.f('uq_flask_sessions_session_id'))
    )
    op.create_table('location',
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_location'))
    )
    op.create_table('role',
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role'))
    )
    op.create_index(op.f('ix_role_name'), 'role', ['name'], unique=True)
    op.create_table('user',
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(name='active'), nullable=False),
    sa.Column('confirmed_at', sqla_bundle.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user'))
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('user_role',
    sa.Column('user_id', sqla_bundle.BigInteger(), nullable=False),
    sa.Column('role_id', sqla_bundle.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('fk_user_role_to_role_id_on_role')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_role_to_user_id_on_user')),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name=op.f('pk_user_role'))
    )
    op.create_table('workout',
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('user_id', sqla_bundle.BigInteger(), nullable=False),
    sa.Column('location_id', sqla_bundle.BigInteger(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], name=op.f('fk_workout_to_location_id_on_location')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_workout_to_user_id_on_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workout'))
    )
    op.create_table('exercise',
    sa.Column('workout_id', sqla_bundle.BigInteger(), nullable=False),
    sa.Column('exercise_type_id', sqla_bundle.BigInteger(), nullable=False),
    sa.Column('discriminator', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['exercise_type_id'], ['exercise_type.id'], name=op.f('fk_exercise_to_exercise_type_id_on_exercise_type')),
    sa.ForeignKeyConstraint(['workout_id'], ['workout.id'], name=op.f('fk_exercise_to_workout_id_on_workout')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_exercise'))
    )
    op.create_table('distance_exercise',
    sa.Column('distance', sa.Float(), nullable=False),
    sa.Column('distance_units', sa.String(length=16), nullable=False),
    sa.Column('duration', sa.Interval(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['exercise.id'], name=op.f('fk_distance_exercise_to_id_on_exercise')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_distance_exercise'))
    )
    op.create_table('repetition_exercise',
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('reps', sa.SmallInteger(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['exercise.id'], name=op.f('fk_repetition_exercise_to_id_on_exercise')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_repetition_exercise'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('repetition_exercise')
    op.drop_table('distance_exercise')
    op.drop_table('exercise')
    op.drop_table('workout')
    op.drop_table('user_role')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_role_name'), table_name='role')
    op.drop_table('role')
    op.drop_table('location')
    op.drop_table('flask_sessions')
    op.drop_table('exercise_type')
    # ### end Alembic commands ###
